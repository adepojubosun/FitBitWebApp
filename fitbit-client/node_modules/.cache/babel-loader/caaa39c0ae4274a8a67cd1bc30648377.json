{"ast":null,"code":"var _jsxFileName = \"/Users/maverick/Documents/CodingProjects/Fitbit Client/fitbit-client/src/Components/home.jsx\";\nimport React, { Component } from \"react\";\nimport StatsCard from \"./StatsCard\";\nimport { Row, Col, Dropdown } from \"react-bootstrap\";\nimport AdminNavbar from \"./AdminNavbar\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport queryString from \"query-string\";\nimport moment from 'moment';\nconst mealUrl = \"https://api.fitbit.com/1/user/-/foods/log/date/\"; //2019-10-06.json\n\nconst foodUrl = \"https://api.fitbit.com/1/foods/\";\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mealLog: {},\n      dataSummary: {},\n      startDate: null\n    };\n    this.loadData = this.loadData.bind(this);\n  }\n\n  checkData() {\n    if (Object.keys(this.state.dataSummary).length === 0) {\n      return \"No logs available for that date\";\n    }\n  }\n\n  loadData(date) {\n    //this.setState({startDate: date});\n    console.log(date);\n    let parsed = queryString.parse(window.location.search);\n    let access_token = parsed.access_token;\n    fetch(mealUrl + date + \".json\", {\n      headers: {\n        'Authorization': 'Bearer ' + access_token\n      }\n    }).then(response => response.json()).then(data => console.log(data.summary));\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"main-panel\",\n      id: \"main-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(AdminNavbar, {\n      data: this.props.userDetails,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Select Food Filter\"), React.createElement(Dropdown.Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Dropdown.Item, {\n      href: \"#/action-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Action\"), React.createElement(Dropdown.Item, {\n      href: \"#/action-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Another action\"), React.createElement(Dropdown.Item, {\n      href: \"#/action-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Something else\")))), React.createElement(Col, {\n      lg: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      selected: this.state.startDate,\n      onChange: date => this.loadData(moment(date).format('YYYY-MM-DD')),\n      dateFormat: \"yyyy-MM-dd\",\n      placeholderText: \"Select food log date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, Object.keys(this.state.dataSummary).forEach(data => {\n      {\n        return React.createElement(Col, {\n          lg: 3,\n          sm: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(StatsCard, {\n          bigIcon: React.createElement(\"i\", {\n            className: \"pe-7s-server text-warning\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }),\n          statsText: \"Capacity\",\n          statsValue: this.state.dataSummary[data],\n          statsIcon: React.createElement(\"i\", {\n            className: \"fa fa-refresh\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }),\n          statsIconText: data,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }));\n      }\n    })))));\n  }\n\n} // data.foods.map(function(logged){\n//   return fetch(foodUrl+logged.loggedFood.foodId+\".json\",\n//   {headers : {'Authorization': 'Bearer '+access_token}\n// }).then(response => response.json()).then(\n//   function(data)\n//   {\n//     console.log(data);\n//   }\n// )\n// })","map":{"version":3,"sources":["/Users/maverick/Documents/CodingProjects/Fitbit Client/fitbit-client/src/Components/home.jsx"],"names":["React","Component","StatsCard","Row","Col","Dropdown","AdminNavbar","DatePicker","queryString","moment","mealUrl","foodUrl","Home","constructor","props","state","mealLog","dataSummary","startDate","loadData","bind","checkData","Object","keys","length","date","console","log","parsed","parse","window","location","search","access_token","fetch","headers","then","response","json","data","summary","componentDidMount","render","userDetails","format","forEach"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport StatsCard from \"./StatsCard\";\nimport { Row, Col, Dropdown } from \"react-bootstrap\";\nimport AdminNavbar from \"./AdminNavbar\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport queryString from \"query-string\";\nimport moment from 'moment';\n\nconst mealUrl =\n  \"https://api.fitbit.com/1/user/-/foods/log/date/\";\n//2019-10-06.json\nconst foodUrl = \"https://api.fitbit.com/1/foods/\"\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mealLog: {},\n      dataSummary: {},\n      startDate: null\n    };\n    this.loadData = this.loadData.bind(this);\n  }\n\n  checkData()\n  {\n    if(Object.keys(this.state.dataSummary).length === 0)\n    {\n      return \"No logs available for that date\";\n    }\n  }\n\n  loadData(date)\n  {\n    //this.setState({startDate: date});\n    console.log(date);\n    let parsed = queryString.parse(window.location.search);\n    let access_token = parsed.access_token;\n\n    fetch(mealUrl+date+\".json\", \n      {headers : {'Authorization': 'Bearer '+access_token}\n    }).then(response => response.json()).then(data => console.log(data.summary)\n    )\n  }\n\n  componentDidMount() {\n  }\n\n\n  render() {\n    return (\n      <div className=\"main-panel\" id=\"main-panel\">\n        <AdminNavbar data={this.props.userDetails} />\n        <div className=\"content\">\n          <div className=\"container\">\n            <Row>\n              <Col lg={4}>\n                <Dropdown>\n                  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                    Select Food Filter\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\n                    <Dropdown.Item href=\"#/action-2\">\n                      Another action\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#/action-3\">\n                      Something else\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Col>\n              <Col lg={4}>\n                <DatePicker\n                  selected={this.state.startDate}\n                  onChange={date => this.loadData(moment(date).format('YYYY-MM-DD'))}\n                  dateFormat=\"yyyy-MM-dd\"\n                  placeholderText=\"Select food log date\"\n                /> \n              </Col>\n            </Row>\n            <br></br>\n            <Row>\n              \n            {Object.keys(this.state.dataSummary).forEach(data => { \n              {return (              <Col lg={3} sm={6}>\n                <StatsCard\n                  bigIcon={<i className=\"pe-7s-server text-warning\" />}\n                  statsText=\"Capacity\"\n                  statsValue={this.state.dataSummary[data]}\n                  statsIcon={<i className=\"fa fa-refresh\" />}\n                  statsIconText={data}\n                />\n              </Col>) }\n\n            })}\n\n            </Row>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n        // data.foods.map(function(logged){\n        //   return fetch(foodUrl+logged.loggedFood.foodId+\".json\",\n        //   {headers : {'Authorization': 'Bearer '+access_token}\n        // }).then(response => response.json()).then(\n        //   function(data)\n        //   {\n        //     console.log(data);\n        //   }\n        // )\n        // })"]},"metadata":{},"sourceType":"module"}