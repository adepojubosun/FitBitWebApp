{"ast":null,"code":"var _jsxFileName = \"/Users/maverick/Documents/CodingProjects/Fitbit Client/fitbit-client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Login from './Components/login';\nimport Home from './Components/home';\nimport queryString from \"query-string\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      serverData: {},\n      isLoading: false,\n      filterString: ''\n    };\n  }\n\n  componentDidMount() {\n    this.setState.isLoading = true;\n    let parsed = queryString.parse(window.location.search);\n    let accessToken = parsed.access_token; //console.log(accessToken);\n    //GET https://api.fitbit.com/1/user/[user-id]/profile.json\n\n    fetch('https://api.fitbit.com/1/user/-/profile.json', {\n      headers: {\n        'Authorization': 'Bearer ' + accessToken\n      }\n    }).then(response => response.json()).then(data => this.setState({\n      serverData: data,\n      isLoading: false\n    }));\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Loading\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, this.state.serverData ? React.createElement(Home, {\n      data: this.state.serverData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }) : React.createElement(Login, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/maverick/Documents/CodingProjects/Fitbit Client/fitbit-client/src/App.js"],"names":["React","Component","Login","Home","queryString","App","constructor","props","state","serverData","isLoading","filterString","componentDidMount","setState","parsed","parse","window","location","search","accessToken","access_token","fetch","headers","then","response","json","data","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,WAAP,MAAwB,cAAxB;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,CAACC,KAAD,EACX;AACE,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAG,EADF;AAEXC,MAAAA,SAAS,EAAG,KAFD;AAGXC,MAAAA,YAAY,EAAG;AAHJ,KAAb;AAKD;;AACDC,EAAAA,iBAAiB,GACjB;AACE,SAAKC,QAAL,CAAcH,SAAd,GAA0B,IAA1B;AACA,QAAII,MAAM,GAAGV,WAAW,CAACW,KAAZ,CAAkBC,MAAM,CAACC,QAAP,CAAgBC,MAAlC,CAAb;AACA,QAAIC,WAAW,GAAGL,MAAM,CAACM,YAAzB,CAHF,CAIE;AACA;;AACAC,IAAAA,KAAK,CAAC,8CAAD,EACL;AAACC,MAAAA,OAAO,EAAG;AAAC,yBAAiB,YAAUH;AAA5B;AAAX,KADK,CAAL,CAECI,IAFD,CAEMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFlB,EAEmCF,IAFnC,CAEwCG,IAAI,IAAI,KAAKb,QAAL,CAAc;AAACJ,MAAAA,UAAU,EAAEiB,IAAb;AAAmBhB,MAAAA,SAAS,EAAG;AAA/B,KAAd,CAFhD;AAGD;;AACDiB,EAAAA,MAAM,GAAI;AACR,QAAG,KAAKnB,KAAL,CAAWE,SAAd,EACA;AACE,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACD;;AAED,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKF,KAAL,CAAWC,UAAX,GAAwB,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAA+D,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADhE,CADF;AAOD;;AAlCyB;;AAsC5B,eAAeJ,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Login from './Components/login';\nimport Home from './Components/home';\nimport queryString from \"query-string\";\n\nclass App extends Component {\n  constructor(props) \n  {\n    super(props);\n    this.state = {\n      serverData : {},\n      isLoading : false,\n      filterString : ''\n    }\n  }\n  componentDidMount()\n  {\n    this.setState.isLoading = true;\n    let parsed = queryString.parse(window.location.search);\n    let accessToken = parsed.access_token;\n    //console.log(accessToken);\n    //GET https://api.fitbit.com/1/user/[user-id]/profile.json\n    fetch('https://api.fitbit.com/1/user/-/profile.json', \n    {headers : {'Authorization': 'Bearer '+accessToken}\n  }).then(response => response.json()).then(data => this.setState({serverData: data, isLoading : false}));\n  }\n  render () {\n    if(this.state.isLoading)\n    {\n      return <p>Loading</p>\n    }\n\n    return (\n      <div>\n      {this.state.serverData ? <Home data={this.state.serverData}/> : <Login/> }\n      </div>\n      \n     \n  );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}